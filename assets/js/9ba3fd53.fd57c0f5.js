"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6790],{4907:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(6687);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(r),m=n,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?o.createElement(f,i(i({ref:t},p),{},{components:r})):o.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4603:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var o=r(5177),n=r(4416),a=(r(6687),r(4907)),i=["components"],c={sidebar_position:1},l=void 0,s={unversionedId:"protocol/Governance/Access Control",id:"protocol/Governance/Access Control",title:"Access Control",description:"Fei Protocol has a role based access control, where each role grants a specific permission over a specific part of the protocol. The roles are assigned to three categories: Major, Admin and Minor. They are documented in TribeRoles.",source:"@site/docs/protocol/Governance/Access Control.md",sourceDirName:"protocol/Governance",slug:"/protocol/Governance/Access Control",permalink:"/docs/protocol/Governance/Access Control",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protocol/Governance/Access Control.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Collaterisation",permalink:"/docs/protocol/Mechanism/Collaterisation"},next:{title:"DAO",permalink:"/docs/protocol/Governance/DAO"}},p={},u=[{value:"Major roles",id:"major-roles",level:2},{value:"How they work",id:"how-they-work",level:2},{value:"Contract admin",id:"contract-admin",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Fei Protocol has a role based access control, where each role grants a specific permission over a specific part of the protocol. The roles are assigned to three categories: ",(0,a.kt)("inlineCode",{parentName:"p"},"Major"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Admin")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Minor"),". They are documented in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fei-protocol/fei-protocol-core/blob/develop/contracts/core/TribeRoles.sol"},"TribeRoles"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Major")," roles are the most powerful across the protocol, ",(0,a.kt)("inlineCode",{parentName:"p"},"Admin")," have management capability over critical functionality and ",(0,a.kt)("inlineCode",{parentName:"p"},"Minor")," are operational roles."),(0,a.kt)("h2",{id:"major-roles"},"Major roles"),(0,a.kt)("p",null,"There are 4 major roles: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GOVERNOR"),": Ultimate control over the Fei ecosystem. Able to create new roles and access all protocol functionality"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GUARDIAN"),": Emergency safety role that is used to protect the protocol. Able to pause contracts and veto malicious proposals"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PCV_CONTROLLER"),": Allows the movement of PCV of any size from any contract to any address"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MINTER"),": Can mint Fei")),(0,a.kt)("h2",{id:"how-they-work"},"How they work"),(0,a.kt)("p",null,"Role creation is limited to the ",(0,a.kt)("inlineCode",{parentName:"p"},"GOVERNOR")," role. Created roles are stored in the storage of ",(0,a.kt)("inlineCode",{parentName:"p"},"Core.sol"),", and each created role is assigned an ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," over that role."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," of a role is then able to grant and revoke that role from individual addreses. The API for creating, granting and revoking roles looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-.sol"},'core.createRole(keccak256("DUMMY_ROLE"), keccak256("GOVERN_ROLE"));\ncore.grantRole(keccak256("DUMMY_ROLE"), dummyAddress);\ncore.revokeRole(keccak256("DUMMY_ROLE"), dummyAddress);\n')),(0,a.kt)("p",null,"This pattern is implemented using the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControlEnumerable.sol"},"AccessControlEnumerable.sol")," contract pattern from OpenZeppelin."),(0,a.kt)("h2",{id:"contract-admin"},"Contract admin"))}m.isMDXComponent=!0}}]);